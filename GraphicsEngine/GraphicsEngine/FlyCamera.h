#pragma once
#include "Camera.h"
class FlyCamera : public Camera
{
public:
	//-----------------------------------------------------------------------------------------------
	// constructer initializes values.
	//-----------------------------------------------------------------------------------------------
	FlyCamera();
	//-----------------------------------------------------------------------------------------------
	// destructer deallocates memory.
	//-----------------------------------------------------------------------------------------------
	~FlyCamera();
	//-----------------------------------------------------------------------------------------------
	// updates the flyCamera.
	// Param:
	//		deltaTime: A float which represents deltatime which increases over time
	//		a_GLWindow: A pointer to the window.
	//-----------------------------------------------------------------------------------------------
	void update(float deltaTime, GLFWwindow* a_GLWindow);
	//-----------------------------------------------------------------------------------------------
	// updates the flyCamera.
	// Param:
	//		speed: A float wich sets the speed of the flying camera
	//-----------------------------------------------------------------------------------------------
	void setSpeed(float speed);

protected:
	//-----------------------------------------------------------------------------------------------
	// speed of the camera
	//-----------------------------------------------------------------------------------------------
	float m_fSpeed;
	//-----------------------------------------------------------------------------------------------
	// cameras up vector
	//-----------------------------------------------------------------------------------------------
	glm::vec3 up;
	//-----------------------------------------------------------------------------------------------
	// mouses x
	//-----------------------------------------------------------------------------------------------
	double m_dMouseX;
	//-----------------------------------------------------------------------------------------------
	// mouses y
	//-----------------------------------------------------------------------------------------------
	double m_dMouseY;
	//-----------------------------------------------------------------------------------------------
	// mouses x with calculations for the screen
	//-----------------------------------------------------------------------------------------------
	double m_dDeltaTiemMouseX;
	//-----------------------------------------------------------------------------------------------
	// mouses y with calculations for the screen
	//-----------------------------------------------------------------------------------------------
	double m_dDeltaTiemMouseY;
};

